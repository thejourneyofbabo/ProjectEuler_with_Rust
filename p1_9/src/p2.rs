// p2.rs
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with and , the first terms will be:
1 2 3 5 8 13 21 34 55 89 ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#[cfg(test)]
fn get_fibo_even_sum(bound: u64) -> u64 {
    let mut sum = 0;
    let mut x = 1;
    let mut y = 1;
    let mut z = x + y;
    while z <= bound {
        if z % 2 == 0 {
            sum += z;
        }
        x = y;
        y = z;
        z = x + y;
    }

    sum
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test() {
        println!("get_fibo_even_sum");
        assert_eq!(10, get_fibo_even_sum(10));
        println!("ans = {}", get_fibo_even_sum(4000000)); //4613732
    }
}
